#!/bin/sh
#
# Script to create a new Android versionName commit
#
# Semantic Versioning: MAJOR.MINOR.PATCH
set +x
if [ $# -ne 1 ] ; then
    echo "Usage: $0 [VERSION_NAME]"
    echo "\n\tExample $0 0.0.1"
    exit 1
fi

APP_GRADLE="app/build.gradle"
LIB_GRADLE="versioninfo/build.gradle"

OLD_VERSION_NAME=$(grep versionName $APP_GRADLE | cut -d"\"" -f2)
NEW_VERSION_NAME=$1
OLD_VERSION_CODE=$(grep versionCode $APP_GRADLE | cut -d" " -f10 ) # VERY FLAKY!
NEW_VERSION_CODE=$(($OLD_VERSION_CODE+1))

# Replace version name
sed -e "s/versionName \"$OLD_VERSION_NAME/versionName \"$NEW_VERSION_NAME/" -i "" $APP_GRADLE
sed -e "s/versionName \"$OLD_VERSION_NAME/versionName \"$NEW_VERSION_NAME/" -i "" $LIB_GRADLE
# Bump version code for Google's Play Store
sed -e "s/versionCode $OLD_VERSION_CODE/versionCode $NEW_VERSION_CODE/" -i "" $APP_GRADLE

# Create a commit with appropriate git tag
git commit $APP_GRADLE -m "Bump to version $NEW_VERSION_NAME (version code $NEW_VERSION_CODE)"
# TODO(saschpe): Maybe only tag MAJOR / MINOR updates, not PATCH level updates
git tag $NEW_VERSION_NAME 
